{"ast":null,"code":"import axios from 'axios';\naxios.defaults.timeout = Number(process.env.NEXT_PUBLIC_API_TIMEOUT_MS) || 3000;\nexport const request = ({\n  method = 'POST',\n  url = '',\n  data = null,\n  contentType = 'application/json',\n  lang = null,\n  baseURL = 'http://localhost:3001/api/'\n}) => {\n  const options = {\n    method,\n    baseURL,\n    url,\n    headers: {\n      'Content-Type': contentType\n    }\n  };\n  if (data && method === 'GET') {\n    options.params = data;\n  } else if (data) {\n    options.data = data;\n  }\n  const errorHandler = axiosError => {\n    let error = {\n      code: '',\n      message: '',\n      status: 0\n    };\n    if (axiosError.response) {\n      error.status = axiosError.response.status;\n      // error.code = axiosError.response?.data?.code || '';\n      // error.message = axiosError.response?.data?.message || '';\n    } else {\n      error.code = 'NETWORK_ERROR';\n      error.message = 'Network error';\n      error.status = 600;\n    }\n    return error;\n  };\n  return new Promise((resolve, reject) => {\n    axios(options).then(response => resolve(response.data)).catch(error => reject(errorHandler(error)));\n  });\n};","map":{"version":3,"names":["axios","defaults","timeout","Number","process","env","NEXT_PUBLIC_API_TIMEOUT_MS","request","method","url","data","contentType","lang","baseURL","options","headers","params","errorHandler","axiosError","error","code","message","status","response","Promise","resolve","reject","then","catch"],"sources":["/Users/m.gainatullin/work/todo-test/todo-frontent/src/core/helpers/request.ts"],"sourcesContent":["import axios, { AxiosError, AxiosRequestConfig, Method } from 'axios';\n\naxios.defaults.timeout = Number(process.env.NEXT_PUBLIC_API_TIMEOUT_MS) || 3000;\n\ninterface IRequest {\n  method?: Method;\n  url: string;\n  data?: any;\n  contentType?: string;\n  baseURL?: string;\n  lang?: string | null;\n}\n\ntype TError = {\n  code: string;\n  message: any;\n  status: number;\n};\n\nexport const request = ({\n  method = 'POST',\n  url = '',\n  data = null,\n  contentType = 'application/json',\n  lang = null,\n  baseURL = 'http://localhost:3001/api/',\n}: IRequest): Promise<any> => {\n  const options: AxiosRequestConfig = {\n    method,\n    baseURL,\n    url,\n    headers: { 'Content-Type': contentType },\n  };\n\n  if (data && method === 'GET') {\n    options.params = data;\n  } else if (data) {\n    options.data = data;\n  }\n\n  const errorHandler = (axiosError: AxiosError) => {\n    let error: TError = { code: '', message: '', status: 0 };\n    if (axiosError.response) {\n      error.status = axiosError.response.status;\n      // error.code = axiosError.response?.data?.code || '';\n      // error.message = axiosError.response?.data?.message || '';\n    } else {\n      error.code = 'NETWORK_ERROR';\n      error.message = 'Network error';\n      error.status = 600;\n    }\n    return error;\n  };\n\n  return new Promise((resolve, reject) => {\n    axios(options)\n      .then(response => resolve(response.data))\n      .catch(error => reject(errorHandler(error)));\n  });\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAkD,OAAO;AAErEA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAGC,MAAM,CAACC,OAAO,CAACC,GAAG,CAACC,0BAA0B,CAAC,IAAI,IAAI;AAiB/E,OAAO,MAAMC,OAAO,GAAGA,CAAC;EACtBC,MAAM,GAAG,MAAM;EACfC,GAAG,GAAG,EAAE;EACRC,IAAI,GAAG,IAAI;EACXC,WAAW,GAAG,kBAAkB;EAChCC,IAAI,GAAG,IAAI;EACXC,OAAO,GAAG;AACF,CAAC,KAAmB;EAC5B,MAAMC,OAA2B,GAAG;IAClCN,MAAM;IACNK,OAAO;IACPJ,GAAG;IACHM,OAAO,EAAE;MAAE,cAAc,EAAEJ;IAAY;EACzC,CAAC;EAED,IAAID,IAAI,IAAIF,MAAM,KAAK,KAAK,EAAE;IAC5BM,OAAO,CAACE,MAAM,GAAGN,IAAI;EACvB,CAAC,MAAM,IAAIA,IAAI,EAAE;IACfI,OAAO,CAACJ,IAAI,GAAGA,IAAI;EACrB;EAEA,MAAMO,YAAY,GAAIC,UAAsB,IAAK;IAC/C,IAAIC,KAAa,GAAG;MAAEC,IAAI,EAAE,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAE,CAAC;IACxD,IAAIJ,UAAU,CAACK,QAAQ,EAAE;MACvBJ,KAAK,CAACG,MAAM,GAAGJ,UAAU,CAACK,QAAQ,CAACD,MAAM;MACzC;MACA;IACF,CAAC,MAAM;MACLH,KAAK,CAACC,IAAI,GAAG,eAAe;MAC5BD,KAAK,CAACE,OAAO,GAAG,eAAe;MAC/BF,KAAK,CAACG,MAAM,GAAG,GAAG;IACpB;IACA,OAAOH,KAAK;EACd,CAAC;EAED,OAAO,IAAIK,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC1B,KAAK,CAACc,OAAO,CAAC,CACXa,IAAI,CAACJ,QAAQ,IAAIE,OAAO,CAACF,QAAQ,CAACb,IAAI,CAAC,CAAC,CACxCkB,KAAK,CAACT,KAAK,IAAIO,MAAM,CAACT,YAAY,CAACE,KAAK,CAAC,CAAC,CAAC;EAChD,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}